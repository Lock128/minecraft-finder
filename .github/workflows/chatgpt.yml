name: Generate Play Store Screenshots

on:
  workflow_dispatch:
    inputs:
      commit_message:
        description: 'Commit message for screenshots'
        required: false
        default: 'Generate Play Store screenshots'

jobs:
  android-screenshots:
    name: Run integration tests and capture screenshots
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: write
      actions: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.3'
          channel: 'stable'
          cache: true

      - name: Install dependencies
        run: |
          cd flutter_app
          flutter pub get

      - name: Add integration_test dependency
        run: |
          cd flutter_app
          if ! grep -q "integration_test:" pubspec.yaml; then
            echo "üì¶ Adding integration_test dependency..."
            sed -i '/dev_dependencies:/a\  integration_test:\n    sdk: flutter' pubspec.yaml
            flutter pub get
          else
            echo "‚úÖ integration_test dependency already exists"
          fi

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Create Android emulator and run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          target: google_apis
          arch: x86_64
          profile: pixel_6
          ram-size: 4096M
          heap-size: 1024M
          disk-size: 8192M
          script: cd flutter_app && flutter test integration_test/screenshot_test.dart || echo "Test completed with warnings"

      - name: Verify screenshots
        run: |
          if [ -d "screenshots" ]; then
            echo "‚úÖ Screenshots directory found!"
            find screenshots -name "*.png" -type f | head -20
            echo "Total PNG files: $(find screenshots -name "*.png" -type f | wc -l)"
          else
            echo "‚ö†Ô∏è No screenshots directory found"
          fi

      - name: Create report
        run: |
          echo "# Play Store Screenshots Report" > screenshot_report.md
          echo "" >> screenshot_report.md
          echo "**Generated on:** $(date)" >> screenshot_report.md
          echo "**Method:** Android Emulator + Integration Test" >> screenshot_report.md
          echo "**Emulator:** Pixel 6 (API 34)" >> screenshot_report.md
          echo "" >> screenshot_report.md
          
          if [ -d "screenshots" ] && [ "$(find screenshots -name "*.png" -type f | wc -l)" -gt 0 ]; then
            echo "## ‚úÖ Generated Screenshots:" >> screenshot_report.md
            echo "" >> screenshot_report.md
            find screenshots -name "*.png" -type f | while read file; do
              size=$(ls -lh "$file" | awk '{print $5}')
              echo "- \`$file\` ($size)" >> screenshot_report.md
            done
            echo "" >> screenshot_report.md
            echo "**Total screenshots:** $(find screenshots -name "*.png" -type f | wc -l)" >> screenshot_report.md
          else
            echo "## ‚ö†Ô∏è No Screenshots Generated" >> screenshot_report.md
            echo "" >> screenshot_report.md
            echo "The emulator-based screenshot generation did not produce files." >> screenshot_report.md
          fi

      - name: Commit screenshots
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          if [ -d "screenshots" ]; then
            git add screenshots/
          fi
          
          if [ -f "screenshot_report.md" ]; then
            git add screenshot_report.md
          fi
          
          if ! git diff --staged --quiet; then
            git commit -m "${{ github.event.inputs.commit_message }}"
            git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:${{ github.ref_name }}
            echo "‚úÖ Screenshots committed successfully!"
          else
            echo "‚ÑπÔ∏è No changes to commit"
          fi

      - name: Upload screenshots as artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: play-store-screenshots
          path: |
            screenshots/
            screenshot_report.md
          retention-days: 7
