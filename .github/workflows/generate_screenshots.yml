name: Generate Play Store Screenshots

on:
  workflow_dispatch:
    inputs:
      commit_message:
        description: 'Commit message for screenshots'
        required: false
        default: 'Generate Play Store screenshots'

jobs:
  android-screenshots:
    name: Run integration tests and capture screenshots
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: write
      actions: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.3'
          channel: 'stable'
          cache: true

      - name: Install dependencies
        run: |
          cd flutter_app
          flutter pub get

      - name: Add integration_test dependency
        run: |
          cd flutter_app
          if ! grep -q "integration_test:" pubspec.yaml; then
            echo "📦 Adding integration_test dependency..."
            sed -i '/dev_dependencies:/a\  integration_test:\n    sdk: flutter' pubspec.yaml
            flutter pub get
          else
            echo "✅ integration_test dependency already exists"
          fi

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          ls -al
          pwd

      - name: Create Android emulator and run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          target: google_apis
          arch: x86_64
          profile: pixel_6
          ram-size: 4096M
          heap-size: 1024M
          disk-size: 8192M
          emulator-options: -no-window -gpu swiftshader_indirect -no-snapshot -no-audio -no-boot-anim
          disable-animations: true
          script: cd flutter_app && echo "🚀 Running golden screenshot tests..." && flutter test test/create_screenshots.dart || echo "✅ Test completed"

      - name: Copy golden screenshots from test directories
        run: |
          echo "🔍 Looking for generated golden screenshots..."
          
          # Look for golden files in Flutter's test directories
          cd flutter_app
          
          # Check integration_test directory for golden files
          if [ -d "integration_test" ]; then
            echo "📁 Checking integration_test directory..."
            find integration_test -name "*.png" -type f 2>/dev/null || true
          fi
          
          # Check test directory for golden files  
          if [ -d "test" ]; then
            echo "📁 Checking test directory..."
            find test -name "*.png" -type f 2>/dev/null || true
          fi
          
          # Look for golden files in temp directories
          echo "📁 Checking temp directories..."
          GOLDEN_DIRS=$(find /tmp -name "golden_screenshots*" -type d 2>/dev/null || true)
          
          if [ -n "$GOLDEN_DIRS" ]; then
            echo "📁 Found golden screenshot temp directories:"
            echo "$GOLDEN_DIRS"
            
            # Create golden screenshots directory
            mkdir -p integration_test/goldens
            
            # Copy all golden files
            for dir in $GOLDEN_DIRS; do
              if [ -d "$dir" ] && [ "$(ls -A $dir 2>/dev/null)" ]; then
                echo "📋 Copying from $dir"
                find "$dir" -name "*.png" -type f -exec cp {} integration_test/goldens/ \; 2>/dev/null || true
              fi
            done
            
            echo "✅ Golden screenshots copied to integration_test/goldens/"
            ls -la integration_test/goldens/ 2>/dev/null || echo "No files in goldens directory"
          fi
          
          # Look for golden files in Flutter's default locations
          echo "📁 Checking Flutter's default golden file locations..."
          find . -name "*.png" -path "*/goldens/*" -type f 2>/dev/null || true
          find . -name "*golden*.png" -type f 2>/dev/null || true
          
          # Look for any PNG files that might be golden screenshots
          echo "📁 All PNG files in project:"
          find . -name "*.png" -type f 2>/dev/null | head -20 || true
          
          cd ..

      - name: Create report
        run: |
          echo "# Golden Screenshots Report" > screenshot_report.md
          echo "" >> screenshot_report.md
          echo "**Generated on:** $(date)" >> screenshot_report.md
          echo "**Method:** Golden Screenshot Package + Android Emulator" >> screenshot_report.md
          echo "**Emulator:** Pixel 6 (API 34)" >> screenshot_report.md
          echo "" >> screenshot_report.md
          
          # Count all PNG files in the project
          TOTAL_PNGS=$(find . -name "*.png" -type f | wc -l)
          echo "**Total PNG files found:** $TOTAL_PNGS" >> screenshot_report.md
          echo "" >> screenshot_report.md
          
          # Check for golden screenshots in various locations
          FOUND_SCREENSHOTS=false
          
          # Check integration_test/goldens
          if [ -d "flutter_app/integration_test/goldens" ] && [ "$(find flutter_app/integration_test/goldens -name "*.png" -type f | wc -l)" -gt 0 ]; then
            echo "## ✅ Golden Screenshots (integration_test/goldens):" >> screenshot_report.md
            echo "" >> screenshot_report.md
            find flutter_app/integration_test/goldens -name "*.png" -type f | while read file; do
              size=$(ls -lh "$file" | awk '{print $5}')
              echo "- \`$file\` ($size)" >> screenshot_report.md
            done
            echo "" >> screenshot_report.md
            FOUND_SCREENSHOTS=true
          fi
          
          # Check for any golden files in integration_test
          if [ -d "flutter_app/integration_test" ] && [ "$(find flutter_app/integration_test -name "*.png" -type f | wc -l)" -gt 0 ]; then
            echo "## ✅ Screenshots in integration_test:" >> screenshot_report.md
            echo "" >> screenshot_report.md
            find flutter_app/integration_test -name "*.png" -type f | while read file; do
              size=$(ls -lh "$file" | awk '{print $5}')
              echo "- \`$file\` ($size)" >> screenshot_report.md
            done
            echo "" >> screenshot_report.md
            FOUND_SCREENSHOTS=true
          fi
          
          # Check for any golden files in test directory
          if [ -d "flutter_app/test" ] && [ "$(find flutter_app/test -name "*.png" -type f | wc -l)" -gt 0 ]; then
            echo "## ✅ Screenshots in test directory:" >> screenshot_report.md
            echo "" >> screenshot_report.md
            find flutter_app/test -name "*.png" -type f | while read file; do
              size=$(ls -lh "$file" | awk '{print $5}')
              echo "- \`$file\` ($size)" >> screenshot_report.md
            done
            echo "" >> screenshot_report.md
            FOUND_SCREENSHOTS=true
          fi
          
          # Check for regular screenshots
          if [ -d "screenshots" ] && [ "$(find screenshots -name "*.png" -type f | wc -l)" -gt 0 ]; then
            echo "## ✅ Regular Screenshots:" >> screenshot_report.md
            echo "" >> screenshot_report.md
            find screenshots -name "*.png" -type f | while read file; do
              size=$(ls -lh "$file" | awk '{print $5}')
              echo "- \`$file\` ($size)" >> screenshot_report.md
            done
            echo "" >> screenshot_report.md
            FOUND_SCREENSHOTS=true
          fi
          
          # List all PNG files for debugging
          if [ "$TOTAL_PNGS" -gt 0 ]; then
            echo "## 🔍 All PNG Files Found:" >> screenshot_report.md
            echo "" >> screenshot_report.md
            find . -name "*.png" -type f | while read file; do
              size=$(ls -lh "$file" | awk '{print $5}')
              echo "- \`$file\` ($size)" >> screenshot_report.md
            done
            echo "" >> screenshot_report.md
          fi
          
          # If no screenshots found
          if [ "$TOTAL_PNGS" -eq 0 ]; then
            echo "## ⚠️ No Screenshots Generated" >> screenshot_report.md
            echo "" >> screenshot_report.md
            echo "The golden screenshot generation did not produce any PNG files." >> screenshot_report.md
          fi

      - name: Commit screenshots
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Add any PNG files found in the project
          if [ "$(find . -name "*.png" -type f | wc -l)" -gt 0 ]; then
            echo "📁 Adding all PNG files..."
            find . -name "*.png" -type f -exec git add {} \;
          fi
          
          # Add regular screenshots if they exist
          if [ -d "screenshots" ]; then
            echo "📁 Adding regular screenshots directory..."
            git add screenshots/
          fi

          # Add golden screenshots if they exist in various locations
          if [ -d "flutter_app/integration_test/goldens" ]; then
            echo "� Addding golden screenshots from integration_test/goldens..."
            git add flutter_app/integration_test/goldens/
          fi
          
          if [ -d "flutter_app/integration_test" ] && [ "$(find flutter_app/integration_test -name "*.png" -type f | wc -l)" -gt 0 ]; then
            echo "📁 Adding screenshots from integration_test..."
            git add flutter_app/integration_test/
          fi
          
          if [ -d "flutter_app/test" ] && [ "$(find flutter_app/test -name "*.png" -type f | wc -l)" -gt 0 ]; then
            echo "📁 Adding screenshots from test directory..."
            git add flutter_app/test/
          fi
          
          # Add report
          if [ -f "screenshot_report.md" ]; then
            echo "📄 Adding screenshot report..."
            git add screenshot_report.md
          fi
          
          # Check if there are changes to commit
          if ! git diff --staged --quiet; then
            echo "📝 Committing changes..."
            git commit -m "${{ github.event.inputs.commit_message }}"
            git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:${{ github.ref_name }}
            echo "✅ Screenshots committed successfully!"
          else
            echo "ℹ️ No changes to commit"
          fi

      - name: Upload screenshots as artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: golden-screenshots
          path: |
            screenshots/
            flutter_app/integration_test/goldens/
            screenshot_report.md
          retention-days: 7
